<?xml version="1.0" encoding="utf-8"?>
<topic id="43ce1f81-83aa-4e83-816f-7362de518f9e" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>
      	<codeEntityReference>T:StockSharp.Xaml.ContinuousSecurityWindow</codeEntityReference> -  визуальный редактор для создания <legacyItalic>непрерывных</legacyItalic> 
      	(<codeEntityReference>T:StockSharp.Algo.ContinuousSecurity</codeEntityReference>) инструментов. См. <link xlink:href="0f7cceee-bb7c-4f24-a266-ed900cb8e557">Непрерывный фьючерс</link>.
      </para>
            <mediaLink><image placement="left" xlink:href="HydraGluingCSCustom" /></mediaLink>
      <para>
  		Этот компонент включает: 
  	 </para>
	<list class="bullet">
  			<listItem>
  				<para>
  					Специальное текстовое поле <codeEntityReference>T:StockSharp.Xaml.SecurityIdTextBox</codeEntityReference> - генерирует <legacyItalic>непрерывный</legacyItalic> инструмент при помощи введенного Id - [Code]@[Board]. 
  				</para>
  			</listItem>
  			<listItem>
  				<para> 
  					Компонент <codeEntityReference>T:StockSharp.Xaml.SecurityJumpsEditor</codeEntityReference> - специальный DataGrid для работы с инструментами,
  					входящими в состав <legacyItalic>непрерывного</legacyItalic> инструмента. Составляющие инструменты "обертываются" в класс 
  					<codeEntityReference>T:StockSharp.Xaml.SecurityJump</codeEntityReference>, который имеет два свойства: 
  					<codeEntityReference>P:StockSharp.Xaml.SecurityJump.Security</codeEntityReference> и 
  					<codeEntityReference>P:StockSharp.Xaml.SecurityJump.Date</codeEntityReference> (дата роллирования).
  					Добавленные инструменты хранятся в списке
  					<codeEntityReference>P:StockSharp.Xaml.SecurityJumpsEditor.Jumps</codeEntityReference>. Компонент имеет функцию 
  					<codeEntityReference>M:StockSharp.Xaml.SecurityJumpsEditor.Validate</codeEntityReference> для проверки корректности составляющих инструментов.
		  		</para>
  			</listItem>
  			<listItem>
  				<para>
  					Кнопки добавления/удаления инструментов.
  				</para>
  			</listItem>
  			<listItem>
  				<para>
  					Кнопка <legacyBold>Auto</legacyBold> - позволяет автоматически создавать <legacyItalic>непрерывный</legacyItalic> инструмент.
  				</para>
  			</listItem>
  			  			<listItem>
  				<para>
  					Кнопка <legacyBold>Ok</legacyBold> - завершение создания <legacyItalic>непрерывного</legacyItalic> инструмента.
  				</para>
  			</listItem>
		</list>

      <para>
      	<legacyBold>Основные свойства </legacyBold>
      </para>
      
		<list class="bullet">
  			<listItem>
  				<para><codeEntityReference>P:StockSharp.Xaml.ContinuousSecurityWindow.Security</codeEntityReference> - непрерывный инструмент.</para>
  			</listItem>
  			<listItem>
  				<para><codeEntityReference>P:StockSharp.Xaml.ContinuousSecurityWindow.SecurityStorage</codeEntityReference> - хранилище информации об инструментах.
</para>
  			</listItem>
		</list>
		
	  <para>
      	Ниже приведен фрагмент кода с его использованием. 
      </para>
      


		
  <code title="C#" language="C#">
  <![CDATA[
private void CreateContinuousSecurity_OnClick(object sender, RoutedEventArgs e)
{
	_continuousSecurityWindow = new ContinuousSecurityWindow
	{
		SecurityStorage = _entityRegistry.Securities,
		Security = new ContinuousSecurity { Board = ExchangeBoard.Associated }
	};

	if (!_continuousSecurityWindow.ShowModal(this))
		return;

	_continuousSecurity = _continuousSecurityWindow.Security;
	ContinuousSecurity.Content = _continuousSecurity.Id;

	var first = _continuousSecurity.InnerSecurities.First();

	var gluingSecurity = new Security
	{
		Id = _continuousSecurity.Id,
		Code = _continuousSecurity.Code,
		Board = ExchangeBoard.Associated,
		Type = _continuousSecurity.Type,
		VolumeStep = first.VolumeStep,
		PriceStep = first.PriceStep,
		ExtensionInfo = new Dictionary<object, object> { { "GluingSecurity", true } }
	};

	if (_entityRegistry.Securities.ReadById(gluingSecurity.Id) == null)
	{
		_entityRegistry.Securities.Save(gluingSecurity);
	}
}
]]>
 </code> 
		


    </introduction>
    
     <relatedTopics>
       <link xlink:href="2a78aa1d-c8b6-4679-9d3e-4ab8e909df54">Склеивание данных</link>
    </relatedTopics>
    
  </developerConceptualDocument>
</topic>