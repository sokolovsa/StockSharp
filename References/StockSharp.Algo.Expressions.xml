<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StockSharp.Algo.Expressions</name>
    </assembly>
    <members>
        <member name="T:StockSharp.Algo.Expressions.ExpressionFormula">
            <summary>
            Compiled mathematical formula.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Expressions.ExpressionFormula.Calculate(System.Decimal[])">
            <summary>
            To calculate the basket value.
            </summary>
            <param name="values">Values of basket composite instruments <see cref="P:StockSharp.Algo.BasketSecurity.InnerSecurityIds"/>.</param>
            <returns>The basket value.</returns>
        </member>
        <member name="M:StockSharp.Algo.Expressions.ExpressionFormula.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Algo.Expressions.ExpressionFormula"/>.
            </summary>
            <param name="expression">The mathematic formula.</param>
            <param name="securityIds">IDs securities.</param>
        </member>
        <member name="P:StockSharp.Algo.Expressions.ExpressionFormula.Expression">
            <summary>
            The mathematic formula.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Expressions.ExpressionFormula.Error">
            <summary>
            Compilation error.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Expressions.ExpressionFormula.SecurityIds">
            <summary>
            IDs securities.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Expressions.ExpressionFormula.Functions">
            <summary>
            Available functions.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Expressions.ExpressionFormula.Compile(System.String,System.Boolean)">
            <summary>
            Compile mathematical formula.
            </summary>
            <param name="expression">Text expression.</param>
            <param name="useSecurityIds">Use security ids as variables.</param>
            <returns>Compiled mathematical formula.</returns>
        </member>
        <member name="T:StockSharp.Algo.Expressions.ExpressionHelper">
            <summary>
            Extension class for <see cref="T:StockSharp.Algo.Expressions.ExpressionIndexSecurity"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Expressions.ExpressionHelper.GetSecurityIds(System.String)">
            <summary>
            To get all <see cref="P:StockSharp.BusinessEntities.Security.Id"/> from mathematic formula.
            </summary>
            <param name="expression">Mathematical formula.</param>
            <returns>IDs securities.</returns>
        </member>
        <member name="M:StockSharp.Algo.Expressions.ExpressionHelper.Encode(System.String)">
            <summary>
            To screen off mathematic formula from instruments identifiers <see cref="P:StockSharp.BusinessEntities.Security.Id"/>.
            </summary>
            <param name="expression">The source text.</param>
            <returns>The screened text.</returns>
        </member>
        <member name="M:StockSharp.Algo.Expressions.ExpressionHelper.Decode(System.String)">
            <summary>
            To screen on mathematic formula with instruments identifiers <see cref="P:StockSharp.BusinessEntities.Security.Id"/>.
            </summary>
            <param name="expression">The source text.</param>
            <returns>The unscreened text.</returns>
        </member>
        <member name="P:StockSharp.Algo.Expressions.ExpressionHelper.Functions">
            <summary>
            Available functions.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Expressions.ExpressionHelper.Compile(Ecng.Common.ICompilerService,System.String,System.Boolean)">
            <summary>
            Compile mathematical formula.
            </summary>
            <param name="service">Compiler service.</param>
            <param name="expression">Text expression.</param>
            <param name="useSecurityIds">Use security ids as variables.</param>
            <returns>Compiled mathematical formula.</returns>
        </member>
        <member name="T:StockSharp.Algo.Expressions.ExpressionIndexSecurity">
            <summary>
            The index, built of combination of several instruments through mathematic formula <see cref="P:StockSharp.Algo.Expressions.ExpressionIndexSecurity.Expression"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Expressions.ExpressionIndexSecurity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Algo.Expressions.ExpressionIndexSecurity"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Expressions.ExpressionIndexSecurity.Formula">
            <summary>
            Compiled mathematical formula.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Expressions.ExpressionIndexSecurity.Expression">
            <summary>
            The mathematic formula of index.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Expressions.ExpressionIndexSecurity.InnerSecurityIds">
            <summary>
            Instruments, from which this basket is created.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Expressions.ExpressionIndexSecurity.OnCalculate(System.Decimal[])">
            <summary>
            To calculate the basket value.
            </summary>
            <param name="values">Values of basket composite instruments <see cref="P:StockSharp.Algo.Expressions.ExpressionIndexSecurity.InnerSecurityIds"/>.</param>
            <returns>The basket value.</returns>
        </member>
        <member name="M:StockSharp.Algo.Expressions.ExpressionIndexSecurity.Clone">
            <summary>
            Create a copy of <see cref="T:StockSharp.BusinessEntities.Security"/>.
            </summary>
            <returns>Copy.</returns>
        </member>
        <member name="M:StockSharp.Algo.Expressions.ExpressionIndexSecurity.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:StockSharp.Algo.Expressions.ExpressionIndexSecurity.ToSerializedString">
            <summary>
            Save security state to string.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="M:StockSharp.Algo.Expressions.ExpressionIndexSecurity.FromSerializedString(System.String)">
            <summary>
            Load security state from <paramref name="text"/>.
            </summary>
            <param name="text">Value, received from <see cref="M:StockSharp.Algo.BasketSecurity.ToSerializedString"/>.</param>
        </member>
        <member name="T:StockSharp.Algo.Expressions.ExpressionIndexCsvSecurityList">
            <summary>
            CSV storage of index securities.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Expressions.ExpressionIndexCsvSecurityList.#ctor(StockSharp.Algo.Storages.Csv.CsvEntityRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Algo.Expressions.ExpressionIndexCsvSecurityList"/>.
            </summary>
            <param name="registry">The CSV storage of trading objects.</param>
        </member>
        <member name="M:StockSharp.Algo.Expressions.ExpressionIndexCsvSecurityList.CreateSecurity(System.String)">
            <inheritdoc />
        </member>
        <member name="M:StockSharp.Algo.Expressions.ExpressionIndexCsvSecurityList.CreateText(StockSharp.Algo.IndexSecurity)">
            <inheritdoc />
        </member>
    </members>
</doc>
